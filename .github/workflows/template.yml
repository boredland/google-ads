name: Generate google ads api and run tests

on:
  workflow_call:
    inputs:
      environment:
        description: 'The environment to deploy to'
        required: true
        type: string
      release:
        type: boolean

jobs:
  test:
    name: Node ${{ matrix.node }} testing
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    strategy:
      matrix:
        node: ['14', '16', '18']
    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --prefer-offline

      - name: Install Protoc
        run: sudo apt install protobuf-compiler

      - name: Generate google ads api from protos
        run: yarn generate ${{ vars.GOOGLE_ADS_API_VERSION }}

      - uses: actions/upload-artifact@v3
        with:
          name: generated
          path: src/generated

      - name: Write COVERALLS_TOKEN to .coveralls.yml
        run: |
          echo repo_token: ${{ secrets.COVERALLS_TOKEN }} > .coveralls.yml

      - name: Test
        run: yarn test

      - name: Coveralls
        uses: pmienk/coveralls-github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ${{matrix.os}}-node-${{ matrix.node }}
          parallel: true

  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: pmienk/coveralls-github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  publish:
    needs: test
    if: ${{ inputs.release }}
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --prefer-offline

      - name: Download generated files
        uses: actions/download-artifact@v3
        with:
          name: generated

      - name: Publish if version has been updated
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo ${{ github.ref_name }} > .version
          sed -i 's/v//g' .version
          version=$(cat .version)
          yarn release $version
          npm publish --access public

      - name: Release
        uses: softprops/action-gh-release@v1